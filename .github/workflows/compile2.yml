name: Compile

on:
  workflow_dispatch:    # Manual trigger

permissions:
  contents: write       # Required for creating releases

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        py: ['tiger']
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: "3.9"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip        
        pip install .
        pip install pyinstaller onnxruntime

    - name: PyInstaller (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller -c -p ./tigerbx --icon=./tigerbx/exe/ico.ico --add-data "./tigerbx/exe/onnxruntime_providers_shared.dll;onnxruntime/capi" -F ./tigerbx/${{ matrix.py }}.py

    - name: PyInstaller (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        pyinstaller -c -p ./tigerbx --icon=./tigerbx/exe/ico.ico --add-data "./tigerbx/exe/libonnxruntime_providers_shared.so:onnxruntime/capi" -F ./tigerbx/${{ matrix.py }}.py

    - name: PyInstaller (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller -c -p ./tigerbx --icon=./tigerbx/exe/ico.ico --add-data "./tigerbx/exe/libonnxruntime_providers_shared.so:onnxruntime/capi" -F ./tigerbx/${{ matrix.py }}.py

    - name: Package artifacts (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir release
        copy dist\* release\
        powershell -Command "Compress-Archive -Path release\* -DestinationPath release-${{ matrix.os }}-${{ github.run_number }}.zip"

    - name: Package artifacts (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        mkdir release
        mv dist/* release/
        zip -r release-${{ matrix.os }}-${{ github.run_number }}.zip release/

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-${{ matrix.os }}-${{ github.run_number }}
        path: release-${{ matrix.os }}-${{ github.run_number }}.zip

  release:
    needs: build
    if: github.event_name == 'workflow_dispatch'   # Only run on manual trigger
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Draft Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.run_number }}
        name: Release ${{ github.run_number }}
        draft: true
        prerelease: false
        files: |
          artifacts/release-windows-latest-${{ github.run_number }}/release-windows-latest-${{ github.run_number }}.zip
          artifacts/release-ubuntu-latest-${{ github.run_number }}/release-ubuntu-latest-${{ github.run_number }}.zip
          artifacts/release-macos-latest-${{ github.run_number }}/release-macos-latest-${{ github.run_number }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}